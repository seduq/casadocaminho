// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "client"
}

generator zod {
  provider                         = "zod-prisma-types"
  useMultipleFiles                 = true // default is false
  writeBarrelFiles                 = false // default is true
  createInputTypes                 = false // default is true
  // createModelTypes                 = false // default is true
  // addInputTypeValidation           = false // default is true
  // addIncludeType                   = false // default is true
  addSelectType                    = false // default is true
  validateWhereUniqueInput         = false // default is true
  createOptionalDefaultValuesTypes = true // default is false
  createRelationValuesTypes        = true // default is false
  createPartialTypes               = true // default is false
  // useDefaultValidators             = false // default is true
  // coerceDate                       = false // default is true
  // writeNullishInModelTypes         = true // default is false
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_LEGACY_URL")
}

enum EventType {
  Sopa
  Leite
  Cesta_de_Alimentos
  Enxoval
  Cobertores
}

model Event {
  Id         Int       @id @default(autoincrement())
  DataFinal  DateTime
  DataInicio DateTime
  Descricao  String
  EventType  EventType
  CreatedAt  DateTime  @default(now())
}

enum Scholarmanship {
  Analfabeto
  Fundamental_Incompleto
  Fundamental_Cursando
  Fundamental_Completo
  Médio_Incompleto
  Médio_Cursando
  Médio_Completo
  Técnico_Incompleto
  Técnico_Cursando
  Técnico_Completo
  Superior_Incompleto
  Superior_Cursando
  Superior_Completo
  Pros_Graduação_Incompleto
  Pros_Graduação_Cursando
  Pros_Graduação_Completo
}

enum FamilyRelationship {
  Tio
  Companheiro
  Filho
  Neto
  Outros
}

enum Gender {
  Masculino
  Feminino
}

model Dependent {
  Id                 Int                @id @default(autoincrement())
  Code               String
  Name               String
  Birthday           DateTime
  FamilyRelationship FamilyRelationship
  Gender             Gender

  Family   Family @relation(fields: [FamilyId], references: [Id])
  FamilyId Int

  Scholarmanship Scholarmanship?
  DateInclusion  DateTime?
  Status         String?
}

model Family {
  Id       Int      @id @default(autoincrement())
  Code     String?    
  Name     String?    
  Birthday DateTime?    

  Dependents Dependent[]

  CEP        String?
  Logradouro String?
  Numero     String?
  Bairro     String?

  DateInclusion   DateTime?
  DateExclusion   DateTime?
  ExclusionReason String?
}
