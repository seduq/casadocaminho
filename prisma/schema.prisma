// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider                         = "zod-prisma-types"
  useMultipleFiles                 = true // default is false
  writeBarrelFiles                 = false // default is true
  createInputTypes                 = false // default is true
  // createModelTypes                 = false // default is true
  // addInputTypeValidation           = false // default is true
  // addIncludeType                   = false // default is true
  addSelectType                    = false // default is true
  validateWhereUniqueInput         = false // default is true
  createOptionalDefaultValuesTypes = true // default is false
  createRelationValuesTypes        = true // default is false
  createPartialTypes               = true // default is false
  // useDefaultValidators             = false // default is true
  // coerceDate                       = false // default is true
  // writeNullishInModelTypes         = true // default is false
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum EventType {
  Sopa
  Leite
  Cesta_De_Alimentos
  Enxoval
  Cobertores
}

model Event {
  Id         Int       @id @default(autoincrement())
  DataFinal  DateTime
  DataInicio DateTime
  Descricao  String
  EventType  EventType
  CreatedAt  DateTime  @default(now())
  UpdatedAt  DateTime  @default(now()) @updatedAt()
}

enum FamilyRelationship {
  Companheiro
  Filho
  Neto
  Outros
}

enum Gender {
  Masculino
  Feminino
}

model Dependent {
  Id                 Int                @id @default(autoincrement())
  Code               String
  Name               String
  Birthday           DateTime
  FamilyRelationship FamilyRelationship
  Gender             Gender

  Family   Family @relation(fields: [FamilyId], references: [Id])
  FamilyId Int

  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @default(now()) @updatedAt()

  Attendances Attendance[]
}

model Family {
  Id       Int      @id @default(autoincrement())
  Code     String
  Name     String
  Birthday DateTime

  Dependents Dependent[]
  Attendance Attendance[]

  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @default(now()) @updatedAt()
}

model Attendance {
  Id Int @id @default(autoincrement())

  Dependent Dependent[]
  Family    Family[]

  Boys Int?
  Girls Int?

  CreatedAt DateTime @default(now())
  UpdatedAt DateTime @default(now()) @updatedAt()
}
